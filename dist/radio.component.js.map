{"version":3,"file":"radio.component.js","sourceRoot":"","sources":["../src/radio.component.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,aAAa,EAAG,QAAQ,EAAE,MAAM,aAAa,CAAC;AAEvD,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AAEzC,OAAO,WAAW,MAAM,gBAAgB,CAAC;AACzC,OAAO,QAAQ,MAAM,kBAAkB,CAAC;AAGxC,IAAa,KAAK,GAAlB,MAAa,KAAM,SAAQ,IAAI;IAA/B;;QAGsC,aAAQ,GAAY,KAAK,CAAC;QAC1B,YAAO,GAAY,KAAK,CAAC;QACzB,UAAK,GAAY,KAAK,CAAC;QACvB,YAAO,GAAY,KAAK,CAAC;QAC1B,UAAK,GAAU,EAAE,CAAC;QAClB,SAAI,GAAU,EAAE,CAAC;QACjB,QAAG,GAAU,EAAE,CAAC;QACf,eAAU,GAAY,KAAK,CAAC;IAKlE,CAAC;IAHW,MAAM;QACd,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;CACF,CAAA;AAde,qBAAe,GAAG,CAAC,WAAW,CAAC,CAAC;AAEjB;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;uCAAkC;AACjC;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;sCAAiC;AAChC;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;oCAA+B;AAC9B;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;sCAAiC;AACjC;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;oCAA0B;AACzB;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;mCAAyB;AACxB;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;kCAAwB;AACtB;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;yCAAoC;AAVrD,KAAK;IADjB,aAAa,CAAC,UAAU,CAAC;GACb,KAAK,CAejB;SAfY,KAAK","sourcesContent":["import { customElement,  property } from 'lit-element';\r\n\r\nimport { Base } from '@spectrum/sp-base';\r\n\r\nimport radioStyles from './radio.styles';\r\nimport template from './radio.template';\r\n\r\n@customElement('sp-radio')\r\nexport class Radio extends Base {\r\n  public static componentStyles = [radioStyles];\r\n\r\n  @property({ type: Boolean }) public disabled: boolean = false;\r\n  @property({ type: Boolean }) public invalid: boolean = false;\r\n  @property({ type: Boolean }) public quiet: boolean = false;\r\n  @property({ type: Boolean }) public checked: boolean = false;\r\n  @property({ type: String }) public label: string ='';\r\n  @property({ type: String }) public name: string ='';\r\n  @property({ type: String }) public for: string ='';\r\n  @property({ type: Boolean }) public labelBelow: boolean = false;\r\n  \r\n  protected render() {\r\n    return template.call(this);\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'sp-radio': Radio;\r\n  }\r\n}\r\n\r\n\r\n\r\n"]}